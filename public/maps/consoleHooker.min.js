(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({"C:\\Users\\huste\\Desktop\\Random Stuff\\Code\\Websites\\Mata-Scale-Website\\public\\javascripts\\consoleHooker.js":[function(require,module,exports){
// Logs
console.defaultLog = console.log.bind(console);
console.logs = [];
console.log = function(){

  // default &  console.log()
  console.defaultLog.apply(console, arguments);

  // new & array data
  console.logs.push(Array.from(arguments));

  // create the custom event
  let logEvent = new CustomeEvent("onConsoleLog", {
    args: arguments, 
    logs: console.logs
  });

  // dispach (send) the event to document
  document:dispachEvent(logEvent);
}

//Errors
console.defaultError = console.error.bind(console);
console.errors = [];
console.error = function(){

  // default &  console.error()
  console.defaultError.apply(console, arguments);

  // new & array data
  console.errors.push(Array.from(arguments));

  // create the custom event
  let errorEvent = new CustomeEvent("onConsoleError", {
    args: arguments, 
    logs: console.errors
  });

  // dispach (send) the event to document
  document:dispachEvent(errorEvent);
}

//Warn
console.defaultWarn = console.warn.bind(console);
console.warns = [];
console.warn = function(){

  // default &  console.warn()
  console.defaultWarn.apply(console, arguments);

  // new & array data
  console.warns.push(Array.from(arguments));

  // create the custom event
  let warnEvent = new CustomeEvent("onConsoleWarn", {
    args: arguments, 
    logs: console.warns
  });

  // dispach (send) the event to document
  document:dispachEvent(warnEvent);
}

//Debug
console.defaultDebug = console.debug.bind(console);
console.debugs = [];
console.debug = function(){
  // default &  console.debug()
  console.defaultDebug.apply(console, arguments);

  // new & array data
  console.debugs.push(Array.from(arguments));

  // create the custom event
  let debugEvent = new CustomeEvent("onConsoleDebug", {
    args: arguments, 
    logs: console.debugs
  });

  // dispach (send) the event to document
  document:dispachEvent(debugEvent);
}
},{}]},{},["C:\\Users\\huste\\Desktop\\Random Stuff\\Code\\Websites\\Mata-Scale-Website\\public\\javascripts\\consoleHooker.js"]);
